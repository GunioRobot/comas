= Comas - The Conference Management System

=== What is it?

COMAS aims at making a complete Conference Management System, flexible
enough to be easily adaptable for most conference needs. The aspects
that Comas directly handles are:

* Receiving, voting, approving papers
* Creating proceedings
* Scheduling talks
* Managing attendance (pre-registration, nametag printing, charging
  for participation depending on what talks they are interested in,
  managing day-to-day attendance, preparing diplomas...)
* Various administrative tasks

It is best suited for academic conferences (i.e., conferences where
the main intrerest are the presentations, not commercial meetings,
which are also called conferences in some countries).

=== What is Comas' current status?

Comas is in the final stages of a complete reimplementation from
scratch.

If you were familiar with the Perl-based Comas originally developed
for CONSOL by Manuel Rábade and Gunnar Wolf... Well, some of its ideas
still live on. However, the old Comas code was found to be too rigid,
too hard to adequate for other conferences' needs. 

The Perl version was actively developed in 2003-2004, and regularly
maintained until 2006. I played a bit with other technologies to base
it on, trying to avoid a complete rewrite, but I found it impossible -
And moved on fully to Ruby on Rails.

I have been developing Comas based on Rails since late 2007, and it is
quite promising by now - there are for sure many rough edges to polish
and still some missing functionality. But it's quickly getting there.

=== Where can I get the code?

Comas is developed over Git. Our main repository is located at GitHub,
from where you can easily clone it:

  $ git clone git://github.com/gwolf/comas.git

As soon as I'm happy with its releasability (this means, as soon as I
go over the blockers in the TODO list), I will also put up nice
tarballs.

=== What can I do to help?

Hack on!

=== Who made it?

The original Comas was written mainly by Manuel Rábade and Gunnar
Wolf. 

The current implementation, with somewhat different goals and mindset,
has been so far written by Gunnar Wolf.

== TO-DO

* Proper installation documentation
* Find the right way to indicate the plugin dependencies we have (via
  submodules?) and find the right way to distribute them in-band
* Check what to-do items we really have!
