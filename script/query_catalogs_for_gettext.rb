#!/usr/bin/env ./script/runner
# Hey, emacs, this is a -*- Ruby -*- file!

# 'Touch' first Person and Proposal, as they might dynamically create
# catalog models (see acts_as_magic_model)
Person
Proposal

catalogs = ActiveRecord::Base.connection.catalogs.map { |cat|
  begin
    catalog = cat.classify.constantize
  rescue NameError
    # This looks like a catalog, but is not defined. Skip it.
  end
}.reject {|c| c.nil?}

# Add some tables not recognized as catalogs, but which work as such
catalogs << AdminTask

File.open('lib/strings_in_db.rb', 'w') do |dest|
  dest.puts <<EOF
# Auto-generated file
#
# This file has been automatically generated by query_catalogs_for_gettext.
# The purpose of this program is to check your database for strings that have
# to be translated, and make them available via the standard Gettext 
# mechanisms (i.e. 'rake updatepo') for your .po files.
# 
# Do not pay much attention to this file - its contents will be overwritten 
# each time you call the script. It is (or it should be!) valid Ruby source
# for mere convenience.
#
# If you want this file to be re-generated to reflect the catalogs in your
# particular installation, from the Comas base directory run:
#
#   ./script/query_catalogs_for_gettext
#
# After this, edit the localization files as usual:
#
# - Update the source .po files:
#   rake updatepo
# - Edit them for your language with your favorite editor (i.e. poedit)
# - Update the binary .mo files:
#   rake makemo
EOF
  catalogs.uniq.sort_by {|c| c.to_s}.each do |cat| 
    dest.puts ''
    dest.puts '# %s' % cat.to_s
    cat.find(:all, :order => 'name').each do |elem| 
      dest.puts "_('%s|%s')" % [cat.to_s, elem.name]
    end
  end

  # Add also the paper sizes defined by PDF::Writer
  dest.puts '# PDF::Writer PAGE_SIZES'
  PDF::Writer::PAGE_SIZES.keys.sort.each do |elem|
    dest.puts "_('%s')" % elem
  end
end
