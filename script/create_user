#!/usr/bin/ruby
require File.join(File.dirname(__FILE__), '../config/boot')
require 'environment'

# GetText initialization
require 'gettext'
include GetText
ENV['GETTEXT_PATH'] ||= File.join(File.dirname(__FILE__), 'locale')
Locale.set(ENV['LANG']) if ENV['LANG']
bindtextdomain 'comas'

class DataError < Exception; end
class EmptyField < Exception; end

def read(prompt)
  print prompt
  ret = $stdin.readline.chomp
  raise EmptyField, _("No fields should be left blank - Stopping.") if ret.blank?
  ret
end

begin
  Person.transaction do
    puts _('This script will create a new user for your Comas system.
In order to abort, just answer with a blank line.

Note we are running under the -={%s}=- environment') % RAILS_ENV

    login = read(_'Login: ')
    firstname = read(_'First name: ')
    famname = read(_'Family name: ')
    email = read(_'E-mail: ')
    passwd = read(_'Password (WILL be displayed): ')
    puts ""

    person = Person.new(:login => login, :firstname => firstname,
                        :famname => famname, :email => email,
                        :passwd => passwd)

    begin
      person.save!
    rescue ActiveRecord::RecordInvalid
      raise DataError, _("Cannot create requested person:\n%s") %
        person.errors.full_messages.join("\n")
    end

    tasks = AdminTask.find(:all, :order => :id)
    puts _('Please select any administrative tasks this person should have.')
    puts _('Enter just the task IDs (just the numbers), separated by commas.')
    puts ""
    tasks.each { |task| puts "#{task.id}- #{_(task.name)}" }
    puts ""
    task_ids = read(_("Desired tasks for %s: ") % person.name).
      split(/\s*,\s*/).uniq
    
    task_ids.each do |id|
      raise DataError, _("Invalid task ID: %s") % id unless 
        tasks.map{|t| t.id}.include?(id.to_i)
    end
    person.admin_task_ids = task_ids

    puts _"The person was created successfully!"
  end
  
rescue EmptyField => msg
  puts msg
  exit 1

rescue DataError => err
  puts _"*** No person was added: "
  puts err
  exit 2

rescue Interrupt
  puts _"No work done, no harm done. Goodbye!"
  exit 130
end

exit 0
